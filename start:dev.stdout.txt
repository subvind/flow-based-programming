c[[90m2:50:36 PM[0m] Starting compilation in watch mode...

[[90m2:50:37 PM[0m] Found 0 errors. Watching for file changes.

[AppModule] RabbitMQ URI: amqp://localhost:5672
[32m[Nest] 2175844  - [39m09/10/2024, 2:50:37 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 2175844  - [39m09/10/2024, 2:50:37 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +9ms[39m
[2024-09-10T19:50:37.384Z] [LOG] [Bootstrap] Starting main application...
[2024-09-10T19:50:37.384Z] [LOG] [Bootstrap] [NestFactory] Starting Nest application...
[2024-09-10T19:50:37.386Z] [LOG] [Bootstrap] [InstanceLoader] AppModule dependencies initialized
[2024-09-10T19:50:37.395Z] [LOG] [Bootstrap] [WebSocketsController] EventTriggerComponent subscribed to the "client-event" message
[2024-09-10T19:50:37.395Z] [LOG] [Bootstrap] [WebSocketsController] NumberGeneratorComponent subscribed to the "client-event" message
[2024-09-10T19:50:37.395Z] [LOG] [Bootstrap] [WebSocketsController] NumberMultiplierComponent subscribed to the "client-event" message
[2024-09-10T19:50:37.396Z] [LOG] [Bootstrap] [WebSocketsController] StateMachineComponent subscribed to the "client-event" message
[2024-09-10T19:50:37.396Z] [LOG] [Bootstrap] [WebSocketsController] JobStateMachineComponent subscribed to the "client-event" message
[2024-09-10T19:50:37.396Z] [LOG] [Bootstrap] [WebSocketsController] ButtonTriggerComponent subscribed to the "client-event" message
[2024-09-10T19:50:37.397Z] [LOG] [Bootstrap] [RoutesResolver] AppController {/}:
[2024-09-10T19:50:37.398Z] [LOG] [Bootstrap] [RouterExplorer] Mapped {/, GET} route
[2024-09-10T19:50:37.398Z] [LOG] [Bootstrap] [RouterExplorer] Mapped {/flows, GET} route
[2024-09-10T19:50:37.399Z] [LOG] [Bootstrap] [RouterExplorer] Mapped {/flow/:flowId, GET} route
[2024-09-10T19:50:37.399Z] [LOG] [Bootstrap] [RouterExplorer] Mapped {/document/:flowId/:componentId, GET} route
[2024-09-10T19:50:37.399Z] [LOG] [Bootstrap] [RouterExplorer] Mapped {/documentComponent/:flowId/:componentId/:swimlaneId, GET} route
[2024-09-10T19:50:37.399Z] [LOG] [Bootstrap] [RouterExplorer] Mapped {/documentConnections/:flowId/:componentId/:portId/:swimlaneId, GET} route
[2024-09-10T19:50:37.399Z] [LOG] [Bootstrap] [RouterExplorer] Mapped {/logger, GET} route
[2024-09-10T19:50:37.399Z] [LOG] [Bootstrap] [RouterExplorer] Mapped {/trigger-event/:flowComponentEvent, POST} route
[2024-09-10T19:50:37.400Z] [LOG] [Bootstrap] [RouterExplorer] Mapped {/template/:flowId/:componentId/:templateId, GET} route
[2024-09-10T19:50:37.400Z] [WARN] [Bootstrap] [BackplaneService] Connection not initialized, attempting to reconnect...
[2024-09-10T19:50:37.400Z] [LOG] [Bootstrap] [BackplaneService] Connecting to ISMQ...
[2024-09-10T19:50:37.411Z] [LOG] [Bootstrap] [BackplaneService] Connecting to ISMQ...
Connected to WebSocket server
[2024-09-10T19:50:37.430Z] [LOG] [Bootstrap] [BackplaneService] Successfully connected to ISMQ
[2024-09-10T19:50:37.430Z] [LOG] [Bootstrap] [BackplaneService] Subscribing to exchange: flow_exchange, routingKey: componentEvent, queue: component_event_queue
Connected to WebSocket server
[2024-09-10T19:50:37.434Z] [LOG] [Bootstrap] [BackplaneService] Successfully connected to ISMQ
Subscription response for flow_exchange/component_event_queue: { status: 'ok', message: 'Subscribed successfully' }
[2024-09-10T19:50:37.533Z] [LOG] [Bootstrap] [BackplaneService] Successfully subscribed to queue: component_event_queue
[2024-09-10T19:50:37.533Z] [LOG] [Bootstrap] [BackplaneService] Subscribing to exchange: flow_exchange, routingKey: createConnection, queue: create_connection_queue
Subscription response for flow_exchange/create_connection_queue: { status: 'ok', message: 'Subscribed successfully' }
[2024-09-10T19:50:37.537Z] [LOG] [Bootstrap] [BackplaneService] Successfully subscribed to queue: create_connection_queue
[2024-09-10T19:50:37.537Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.component-1725997837386
[2024-09-10T19:50:37.537Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.component-1725997837386
[2024-09-10T19:50:37.537Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.component-1725997837386
[2024-09-10T19:50:37.537Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.component-1725997837386
[2024-09-10T19:50:37.537Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.component-1725997837386
[2024-09-10T19:50:37.537Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.component-1725997837386
[2024-09-10T19:50:37.538Z] [LOG] [Bootstrap] [NestApplication] Nest application successfully started
[2024-09-10T19:50:37.538Z] [LOG] [Bootstrap] Starting flow execution...
[2024-09-10T19:50:37.538Z] [LOG] [Bootstrap] [FlowExecutorService] Executing flow: example-flow
[2024-09-10T19:50:37.538Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: sm1.initProxyMachine -> jsm1.initProxyMachine
[2024-09-10T19:50:37.538Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.540Z] [LOG] [Bootstrap] Application is running on: http://localhost:3000
[2024-09-10T19:50:37.545Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.545Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: jsm1.get-start -> gen1.start
[2024-09-10T19:50:37.545Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.548Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.548Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: jsm1.get-finish -> gen1.stop
[2024-09-10T19:50:37.548Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.550Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.550Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: jsm1.get-start -> gen2.start
[2024-09-10T19:50:37.550Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.552Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.552Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: jsm1.get-finish -> gen2.stop
[2024-09-10T19:50:37.552Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.555Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.555Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: gen1.numberGenerated -> multi.firstNumberReceived
[2024-09-10T19:50:37.555Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.559Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.559Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: gen2.numberGenerated -> multi.secondNumberReceived
[2024-09-10T19:50:37.559Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.561Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.561Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: btn1.buttonPressed -> jsm1.set-start
[2024-09-10T19:50:37.561Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.563Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.563Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: btn2.buttonPressed -> jsm1.set-pause
[2024-09-10T19:50:37.563Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.565Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.565Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: btn3.buttonPressed -> jsm1.set-resume
[2024-09-10T19:50:37.565Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.566Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.567Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: btn4.buttonPressed -> jsm1.set-finish
[2024-09-10T19:50:37.567Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.569Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.569Z] [LOG] [Bootstrap] [FlowExecutorService] Creating connection: btn5.buttonPressed -> jsm1.set-reset
[2024-09-10T19:50:37.569Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: createConnection
[2024-09-10T19:50:37.570Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.570Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: main (eventTrigger) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.main
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: btn1 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.btn1
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: btn2 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.btn2
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: btn3 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.btn3
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: btn4 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.btn4
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: btn5 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.btn5
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: sm1 (stateMachine) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.sm1
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: jsm1 (jobStateMachine) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.jsm1
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: gen1 (numberGenerator) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.gen1
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: gen2 (numberGenerator) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.gen2
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Constructing component: multi (numberMultiplier) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [ComponentRegistry] Registering component: example-flow.multi
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: main (main) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: btn1 (btn1) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: btn2 (btn2) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: btn3 (btn3) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: btn4 (btn4) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: btn5 (btn5) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: sm1 (sm1) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: jsm1 (jsm1) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: gen1 (gen1) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: gen2 (gen2) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Sync connections for component: multi (multi) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: main (eventTrigger) for flow: example-flow
[2024-09-10T19:50:37.571Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.573Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.573Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: btn1 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.573Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.575Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.575Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: btn2 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.575Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.576Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.576Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: btn3 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.576Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.578Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.578Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: btn4 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.578Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.580Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.580Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: btn5 (buttonTrigger) for flow: example-flow
[2024-09-10T19:50:37.580Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.582Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.582Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: sm1 (stateMachine) for flow: example-flow
[2024-09-10T19:50:37.582Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.583Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.583Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: jsm1 (jobStateMachine) for flow: example-flow
[2024-09-10T19:50:37.583Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.585Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.585Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: gen1 (numberGenerator) for flow: example-flow
[2024-09-10T19:50:37.585Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.587Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.587Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: gen2 (numberGenerator) for flow: example-flow
[2024-09-10T19:50:37.587Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.589Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
[2024-09-10T19:50:37.589Z] [LOG] [Bootstrap] [FlowExecutorService] Initializing component: multi (numberMultiplier) for flow: example-flow
[2024-09-10T19:50:37.589Z] [LOG] [Bootstrap] [BackplaneService] Publishing message to exchange: flow_exchange, routingKey: componentEvent
[2024-09-10T19:50:37.592Z] [LOG] [Bootstrap] [BackplaneService] Message published successfully
